@use "sass:map";

$size: (
  // sp-max: 1023px,
  sp-max: 767px,
  tb-min: 768px,
  tb-max: 1023px,
  pc-min: 1024px
);

$breakpoints: (
  "sp": "(width <=  #{map.get($size, "sp-max")})",
  "sp-tab": "(width <=  #{map.get($size, "tb-max")})",
  "tb": "(#{map.get($size, "tb-min")} <= width <=  #{map.get($size, "tb-max")})",
  "tab-pc": "(#{map.get($size, "tb-min")} <= width)",
  "pc": "(#{map.get($size, "pc-min")} <= width)",
) !default;

@mixin mq($breakpoint: "sp") {
  @media #{map.get($breakpoints, $breakpoint)} {
    @content;
  }
}

//Figma用
@mixin font($size: null, $weight: null, $height: null, $spacing: null) {
  @if $size {
    font-size: calc($size / 16 * 1rem);
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $height {
    line-height: calc($height / $size);
  }
  @if $spacing {
    letter-spacing: calc($spacing / $size * 1em);
  }
}

@mixin mq($breakpoint: "sp") {
  @media #{map.get($breakpoints, $breakpoint)} {
    @content;
  }
}

//Figma用
@mixin font($size: null, $weight: null, $height: null, $spacing: null) {
  @if $size {
    font-size: calc($size / 16 * 1rem);
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $height {
    line-height: calc($height / $size);
  }
  @if $spacing {
    letter-spacing: calc($spacing / $size * 1em);
  }
}
